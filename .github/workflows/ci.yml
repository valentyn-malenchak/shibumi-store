name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

env:
  MONGODB_USER: ${{ secrets.MONGODB_USER }}
  MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
  MONGODB_HOST: ${{ secrets.MONGODB_HOST }}
  MONGODB_PORT: ${{ secrets.MONGODB_PORT }}
  MONGODB_NAME: ${{ secrets.MONGODB_NAME }}
  MONGO_AUTH_SOURCE: ${{ secrets.MONGO_AUTH_SOURCE }}
  AUTH_SECRET_KEY: ${{ secrets.AUTH_SECRET_KEY }}
  AUTH_REFRESH_SECRET_KEY: ${{ secrets.AUTH_REFRESH_SECRET_KEY }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  SEND_GRID_API_KEY: ${{ secrets.SEND_GRID_API_KEY }}
  SEND_GRID_SENDER_EMAIL: ${{ secrets.SEND_GRID_SENDER_EMAIL }}

jobs:

  code-quality:
    name: Check Code Quality
    runs-on: ubuntu-latest

    services:
      mongo:
        image: bitnami/mongodb:8.0.4
        ports:
          - "27017:27017"
        env:
          MONGODB_ADVERTISED_HOSTNAME: ${{ secrets.MONGODB_HOST }}
          MONGODB_REPLICA_SET_MODE: primary
          MONGODB_ROOT_USERNAME: ${{ secrets.MONGODB_USER }}
          MONGODB_ROOT_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
          MONGODB_REPLICA_SET_KEY: ${{ secrets.MONGODB_REPLICA_SET_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Install Python dependencies
        run: uv run invoke install

      - name: Run Code Formatting
        run: uv run invoke format

      - name: Run Linting
        run: uv run invoke lint

      - name: Run Mypy
        run: uv run invoke mypy

      - name: Run Tests
        run: uv run invoke test
        env:
          CI: true

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.2.0
        env:
          CI: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
