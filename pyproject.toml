[tool.poetry]
name = "shibumi-store"
version = "0.1.0"
description = "The 'Shibumi Store' backend project is a small e-commerce solution that provides a seamless and efficient shopping experience."
authors = ["Valentyn Malenchak <valentyn17@gmail.com>"]
readme = "README.md"
packages = [{include = "shibumi_store"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "0.115.8"
uvicorn = {extras = ["standard"], version = "0.34.0"}
pytest = "8.3.4"
invoke = "2.2.0"
motor = "3.7.0"
arrow = "1.3.0"
httpx = "0.28.1"
python-multipart = "0.0.20"
injector = "0.22.0"
pytest-asyncio = "0.25.3"
motor-types = "1.0.0b4"
pytest-cov = "6.0.0"
pydantic = {extras = ["email"], version = "2.10.6"}
phonenumbers = "8.13.55"
pydantic-extra-types = "2.10.2"
mongodb-migrations = "1.3.1"
redis = "5.2.1"
sendgrid = "6.11.0"
tenacity = "9.0.0"
pyjwt = "2.10.1"
argon2-cffi = "23.1.0"


[tool.poetry.group.dev.dependencies]
mypy = "1.15.0"
ruff = "0.9.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# Ruff configuration
[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88
# Assume Python 3.12.
target-version = "py312"

[tool.ruff.lint]
# Enable the pycodestyle (`E`), Pyflakes (`F`), pycodestyle warnings (`W`),
# isort (`I`), pep8-naming (`N`), Pylint (`PL`), McCabe complexity (`C901`),.
# pyupgrade (`UP`) and Ruff-specific rules (`RUF`).
select = ["E", "F", "W", "I", "N", "PL", "C90", "UP", "RUF"]
# Allow autofix for isort and F401 imported but unused.
fixable = ["I", "F401"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


# Mypy configuration
[tool.mypy]
python_version = 3.12
strict = true

[[tool.mypy.overrides]]
module = "mongodb_migrations.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["invoke"]
implicit_reexport = true


# Pytest configuration
[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"


# Coverage configuration
[tool.coverage.run]
relative_files = true
omit = ["*/tests/*"]

[tool.coverage.report]
fail_under = 90
exclude_lines = [
  # A pragma comment that excludes a line, branch, fuction or class
  "# pragma: no cover",
  # Skip abstract methods
  "@abstractmethod",
  "@abc.abstractmethod",
  # Skip not implemented methods
  "raise NotImplementedError",
  # Skip module execution blocks
  "if __name__ == \"__main__\":",
]
